diff --git a/node_modules/hardhat/internal/hardhat-network/provider/fork/ForkBlockchain.js b/node_modules/hardhat/internal/hardhat-network/provider/fork/ForkBlockchain.js
index 5aa8404..831aa0a 100644
--- a/node_modules/hardhat/internal/hardhat-network/provider/fork/ForkBlockchain.js
+++ b/node_modules/hardhat/internal/hardhat-network/provider/fork/ForkBlockchain.js
@@ -199,6 +199,7 @@ class ForkBlockchain extends BlockchainBase_1.BlockchainBase {
                 tx = new ReadOnlyValidEIP1559Transaction_1.ReadOnlyValidEIP1559Transaction(new ethereumjs_util_1.Address(transaction.from), (0, rpcToTxData_1.rpcToTxData)(transaction));
             }
             else {
+                continue;
                 throw new errors_1.InternalError(`Unknown transaction type ${transaction.type.toString()}`);
             }
             block.transactions.push(tx);
diff --git a/node_modules/hardhat/internal/hardhat-network/stack-traces/solidity-errors.js b/node_modules/hardhat/internal/hardhat-network/stack-traces/solidity-errors.js
index 8424a59..ccf7a30 100644
--- a/node_modules/hardhat/internal/hardhat-network/stack-traces/solidity-errors.js
+++ b/node_modules/hardhat/internal/hardhat-network/stack-traces/solidity-errors.js
@@ -105,9 +105,9 @@ function encodeStackTraceEntry(stackTraceEntry) {
     }
 }
 function sourceReferenceToSolidityCallsite(sourceReference) {
-    return new SolidityCallSite(sourceReference.sourceName, sourceReference.contract, sourceReference.function !== undefined
-        ? sourceReference.function
-        : solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, sourceReference.line);
+    return new SolidityCallSite(sourceReference?.sourceName, sourceReference?.contract, sourceReference?.function !== undefined
+        ? sourceReference?.function
+        : solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, sourceReference?.line);
 }
 function getMessageFromLastStackTraceEntry(stackTraceEntry) {
     switch (stackTraceEntry.type) {
