{
  "address": "0x23A4AbF9AcA2242Ca698AA839E72419Ae4b11024",
  "abi": [],
  "transactionHash": "0x29387eed317eefd1e2ad7f14605c82eae79e532cbf067c9577e6a6781c1be56f",
  "receipt": {
    "to": null,
    "from": "0x4ec0dda0430A54b4796109913545F715B2d89F34",
    "contractAddress": "0x23A4AbF9AcA2242Ca698AA839E72419Ae4b11024",
    "transactionIndex": 1,
    "gasUsed": "2155086",
    "logsBloom": "0x
    "blockHash": "0x78d2fa9954f6b6c2ac59eaf556a29c035273596729bc735da7d9adaab7e2e7c0",
    "transactionHash": "0x29387eed317eefd1e2ad7f14605c82eae79e532cbf067c9577e6a6781c1be56f",
    "logs": [],
    "blockNumber": 710450,
    "cumulativeGasUsed": "2155086",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9c6f6088484256b01f093d4f002b3dab",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SwapManager.sol\":\"SwapManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":340},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"contracts/libraries/SwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { ISwapRouter } from '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\\nimport { IERC20Metadata } from '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\n\\ninterface ISwapRouterGetter {\\n    function swapRouter() external view returns (ISwapRouter);\\n}\\n\\nlibrary SwapManager {\\n    address internal constant wbtc = 0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f;\\n    address internal constant weth = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address internal constant usdc = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n\\n    bytes internal constant USDC_TO_WETH = abi.encodePacked(weth, uint24(500), usdc);\\n    bytes internal constant USDC_TO_WBTC = abi.encodePacked(wbtc, uint24(3000), weth, uint24(500), usdc);\\n\\n    bytes internal constant WETH_TO_USDC = abi.encodePacked(weth, uint24(500), usdc);\\n    bytes internal constant WBTC_TO_USDC = abi.encodePacked(wbtc, uint24(3000), weth, uint24(500), usdc);\\n\\n    // ISwapRouter internal constant swapRouter = ISwapRouter(0xE592427A0AEce92De3Edee1F18E0157C05861564);\\n\\n    function swapToken(\\n        address token,\\n        uint256 tokenAmount,\\n        uint256 minUsdcAmount\\n    ) external returns (uint256 usdcReceived, uint256 tokensUsed) {\\n        ISwapRouter swapRouter = ISwapRouterGetter(address(this)).swapRouter();\\n\\n        bytes memory path = token == weth ? WETH_TO_USDC : WBTC_TO_USDC;\\n\\n        ISwapRouter.ExactInputParams memory params = ISwapRouter.ExactInputParams({\\n            path: path,\\n            recipient: address(this),\\n            deadline: block.timestamp,\\n            amountIn: tokenAmount,\\n            amountOutMinimum: minUsdcAmount\\n        });\\n\\n        tokensUsed = tokenAmount;\\n        usdcReceived = swapRouter.exactInput(params);\\n    }\\n\\n    function swapUSDC(\\n        address token,\\n        uint256 tokenAmount,\\n        uint256 maxUsdcAmount\\n    ) external returns (uint256 usdcPaid, uint256 tokensReceived) {\\n        ISwapRouter swapRouter = ISwapRouterGetter(address(this)).swapRouter();\\n\\n        bytes memory path = token == weth ? USDC_TO_WETH : USDC_TO_WBTC;\\n\\n        ISwapRouter.ExactOutputParams memory params = ISwapRouter.ExactOutputParams({\\n            path: path,\\n            recipient: address(this),\\n            deadline: block.timestamp,\\n            amountOut: tokenAmount,\\n            amountInMaximum: maxUsdcAmount\\n        });\\n\\n        tokensReceived = tokenAmount;\\n        usdcPaid = swapRouter.exactOutput(params);\\n    }\\n}\\n\",\"keccak256\":\"0xe5e451acd0d29d06baf7a2a1ebdf9d056739740298750e6b1473110b9fcbd7d7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6105f261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806372618aac14610045578063baa0b7541461007e575b600080fd5b81801561005157600080fd5b5061006561006036600461044c565b61009e565b6040805192835260208301919091520160405180910390f35b81801561008a57600080fd5b5061006561009936600461044c565b610291565b6000806000306001600160a01b031663c31c9c076040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101059190610481565b905060006001600160a01b0387167382af49447d8a07e3bd95bd0d56f35241523fbab11461019a57732f2a2543b76a4166549f7aab2e75bef0aefc5b0f610bb87382af49447d8a07e3bd95bd0d56f35241523fbab16101f473ff970a61a04b1ca14834a43f5de4533ebddb5cc86040516020016101869594939291906104a5565b6040516020818303038152906040526101e9565b7382af49447d8a07e3bd95bd0d56f35241523fbab16101f473ff970a61a04b1ca14834a43f5de4533ebddb5cc86040516020016101d9939291906104f7565b6040516020818303038152906040525b6040805160a08101825282815230602082015242818301526060810189905260808101889052905163c04b8d5960e01b8152889550919250906001600160a01b0384169063c04b8d59906102419084906004016105b9565b6020604051808303816000875af1158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906105cc565b9450505050935093915050565b6000806000306001600160a01b031663c31c9c076040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610481565b905060006001600160a01b0387167382af49447d8a07e3bd95bd0d56f35241523fbab11461038d57732f2a2543b76a4166549f7aab2e75bef0aefc5b0f610bb87382af49447d8a07e3bd95bd0d56f35241523fbab16101f473ff970a61a04b1ca14834a43f5de4533ebddb5cc86040516020016103799594939291906104a5565b6040516020818303038152906040526103dc565b7382af49447d8a07e3bd95bd0d56f35241523fbab16101f473ff970a61a04b1ca14834a43f5de4533ebddb5cc86040516020016103cc939291906104f7565b6040516020818303038152906040525b6040805160a081018252828152306020820152428183015260608101899052608081018890529051631e51809360e31b8152889550919250906001600160a01b0384169063f28c0498906102419084906004016105b9565b6001600160a01b038116811461044957600080fd5b50565b60008060006060848603121561046157600080fd5b833561046c81610434565b95602085013595506040909401359392505050565b60006020828403121561049357600080fd5b815161049e81610434565b9392505050565b6bffffffffffffffffffffffff19606096871b811682526001600160e81b031960e896871b8116601484015294871b811660178301529290941b909216602b840152921b909116602e82015260420190565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6000815160a0845280518060a086015260005b8181101561056257602081840181015160c0888401015201610545565b50600060c082870101526020840151915061058860208601836001600160a01b03169052565b6040848101519086015260608085015190860152608093840151938501939093525050601f01601f19160160c00190565b60208152600061049e6020830184610532565b6000602082840312156105de57600080fd5b505191905056fea164736f6c6343000811000a",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806372618aac14610045578063baa0b7541461007e575b600080fd5b81801561005157600080fd5b5061006561006036600461044c565b61009e565b6040805192835260208301919091520160405180910390f35b81801561008a57600080fd5b5061006561009936600461044c565b610291565b6000806000306001600160a01b031663c31c9c076040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101059190610481565b905060006001600160a01b0387167382af49447d8a07e3bd95bd0d56f35241523fbab11461019a57732f2a2543b76a4166549f7aab2e75bef0aefc5b0f610bb87382af49447d8a07e3bd95bd0d56f35241523fbab16101f473ff970a61a04b1ca14834a43f5de4533ebddb5cc86040516020016101869594939291906104a5565b6040516020818303038152906040526101e9565b7382af49447d8a07e3bd95bd0d56f35241523fbab16101f473ff970a61a04b1ca14834a43f5de4533ebddb5cc86040516020016101d9939291906104f7565b6040516020818303038152906040525b6040805160a08101825282815230602082015242818301526060810189905260808101889052905163c04b8d5960e01b8152889550919250906001600160a01b0384169063c04b8d59906102419084906004016105b9565b6020604051808303816000875af1158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906105cc565b9450505050935093915050565b6000806000306001600160a01b031663c31c9c076040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610481565b905060006001600160a01b0387167382af49447d8a07e3bd95bd0d56f35241523fbab11461038d57732f2a2543b76a4166549f7aab2e75bef0aefc5b0f610bb87382af49447d8a07e3bd95bd0d56f35241523fbab16101f473ff970a61a04b1ca14834a43f5de4533ebddb5cc86040516020016103799594939291906104a5565b6040516020818303038152906040526103dc565b7382af49447d8a07e3bd95bd0d56f35241523fbab16101f473ff970a61a04b1ca14834a43f5de4533ebddb5cc86040516020016103cc939291906104f7565b6040516020818303038152906040525b6040805160a081018252828152306020820152428183015260608101899052608081018890529051631e51809360e31b8152889550919250906001600160a01b0384169063f28c0498906102419084906004016105b9565b6001600160a01b038116811461044957600080fd5b50565b60008060006060848603121561046157600080fd5b833561046c81610434565b95602085013595506040909401359392505050565b60006020828403121561049357600080fd5b815161049e81610434565b9392505050565b6bffffffffffffffffffffffff19606096871b811682526001600160e81b031960e896871b8116601484015294871b811660178301529290941b909216602b840152921b909116602e82015260420190565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6000815160a0845280518060a086015260005b8181101561056257602081840181015160c0888401015201610545565b50600060c082870101526020840151915061058860208601836001600160a01b03169052565b6040848101519086015260608085015190860152608093840151938501939093525050601f01601f19160160c00190565b60208152600061049e6020830184610532565b6000602082840312156105de57600080fd5b505191905056fea164736f6c6343000811000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}